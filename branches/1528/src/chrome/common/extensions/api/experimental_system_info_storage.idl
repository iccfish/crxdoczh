// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

namespace experimental.systemInfo.storage {

  enum StorageUnitType {
    // <!--@The storage has fixed media, e.g. hard disk or SSD.-->
    // 存储器是固定媒体，例如硬盘或 SSD。
    fixed,
    // <!--@The storage is removable, e.g. USB flash drive.-->
    // 存储器可移动，例如 USB 闪存盘。
    removable,
    // <!--@The storage type is unknown.-->
    // 存储器类型未知。
    unknown
  };

  dictionary StorageUnitInfo {
    // <!--@The unique id of the storage unit.-->
    // 存储单元的唯一标识符。
    DOMString id;
    // <!--@The media type of the storage unit.-->
    // 存储单元的媒体类型。
    StorageUnitType type;
    // <!--@The total amount of the storage space, in bytes.-->
    // 存储空间的总共大小，以字节为单位。
    double capacity;
    // <!--@The available amount of the storage space, in bytes.-->
    // 存储空间的可用大小，以字节为单位。
    double availableCapacity;
  };

  dictionary StorageChangeInfo {
    // <!--@The uniue id of the storage unit already changed.-->
    // 已更改存储单元的唯一标识符。
    DOMString id;
    // <!--@The new value of the available capacity.-->
    // 可用容量的新值。
    double availableCapacity;
  };

  callback StorageInfoCallback = void (StorageUnitInfo[] info);

  interface Functions {
    // <!--@Get the storage information from the system. The argument passed to the
    // callback is an array of StorageUnitInfo objects.-->
    // 从系统获取存储信息，传递给回调函数的参数为
    // $ref:StorageUnitInfo 对象的数组。
    static void get(StorageInfoCallback callback);
  };

  interface Events {
    // <!--@Fired when the storage device available capacity is changed.-->
    // 当存储设备的可用容量更改时产生。
    // |info|: <!--@The changed information for the specified storage unit.-->
    // 指定存储单元已更改的信息。
    static void onAvailableCapacityChanged(StorageChangeInfo info);

    // <!--@Fired when a new removable storage is attached to the system.-->
    // 当可移动存储器连接到系统时产生。
    static void onAttached(StorageUnitInfo info);

    // <!--@Fired when a removable storage is detached from the system.-->
    // 当可移动设备从系统移除时产生。
    static void onDetached(DOMString id);
  };
 
};

